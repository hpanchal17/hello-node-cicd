name: CI/CD Pipeline - Build & Deploy to EC2

on:
  push:
    branches:
      - main  # Runs when code is pushed to main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t hello-node-app .
          docker tag hello-node-app:latest ${{ secrets.DOCKER_USERNAME }}/hello-node-app:latest

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-node-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Connected to EC2 Instance"

            # Stop and remove the old container
            CONTAINER_ID=$(docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/hello-node-app")
            if [ ! -z "$CONTAINER_ID" ]; then
                echo "Stopping and removing old container"
                docker stop $CONTAINER_ID
                docker rm $CONTAINER_ID
            fi

            # Pull the latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/hello-node-app:latest
            
            # Run the new container
            docker run -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/hello-node-app:latest
            
            echo "Deployment completed successfully"
